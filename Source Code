import cv2
import numpy as np
import mediapipe as mp
import screen_brightness_control as sbc

# Initialize MediaPipe Hand tracking
mp_hands = mp.solutions.hands
mp_draw = mp.solutions.drawing_utils
hands = mp_hands.Hands(min_detection_confidence=0.7, min_tracking_confidence=0.7)

# Open Webcam
cap = cv2.VideoCapture(0)

while cap.isOpened():
    success, frame = cap.read()
    if not success:
        break

    frame = cv2.flip(frame, 1)  # Flip the frame horizontally
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    # Process frame with MediaPipe
    result = hands.process(rgb_frame)

    if result.multi_hand_landmarks:
        for hand_landmarks in result.multi_hand_landmarks:
            mp_draw.draw_landmarks(frame, hand_landmarks, mp_hands.HAND_CONNECTIONS)

            # Extract landmarks for thumb and index finger
            landmarks = hand_landmarks.landmark
            thumb_tip = landmarks[4]  # Thumb tip
            index_tip = landmarks[8]  # Index finger tip

            # Convert to pixel coordinates
            h, w, _ = frame.shape
            x1, y1 = int(thumb_tip.x * w), int(thumb_tip.y * h)
            x2, y2 = int(index_tip.x * w), int(index_tip.y * h)

            # Draw a line between thumb and index finger
            cv2.line(frame, (x1, y1), (x2, y2), (0, 255, 255), 3)  # Yellow line with thickness 3

            # Calculate distance between thumb and index finger
            distance = np.linalg.norm(np.array([x1, y1]) - np.array([x2, y2]))

            # Map the distance to brightness range (0-100)
            brightness = np.interp(distance, [20, 200], [0, 100])

            # Adjust screen brightness
            sbc.set_brightness(int(brightness))

            # Display Brightness Level
            cv2.putText(frame, f'Brightness: {int(brightness)}%', (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 3)

    # Show frame
    cv2.imshow("Hand Gesture Brightness Control", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
